==============
FAQ de cocos2d
==============

-------------------------------
Preguntas Frecuentes de cocos2d
-------------------------------


.. contents::
	:local:

Se pueden usar objetos 3d en cocos2d ?
--------------------------------------

Si. cocos2d usa `pyglet`_ / OpenGL así que es posible
usar objetos 3D y usarlos en el entorno de cocos2d.

Puedes incluir algunos objetos 3D en tu juego 2D
para mejorar la calidad de tus gráficos sin problemas.

Además, la matriz de proyección por defecto de cocos2d es de hecho 3D,
y por lo tanto no necesitas cambiarla. Pero se puede reemplazar la la
matriz de proyección registrando un evento ``director on_resize``. Ver el
código de la prueba `test/test_custom_on_resize.py` como ejemplo.

Para habilitar las pruebas extendidas de OpenGL, se llama al método
`set_depth_test` de Director.

Recuerda también que cocos2d está diseñado para juegos 2D, así que
para juegos 3D completos, `Panda3d`_ será más apropiado.

Se pueden usar las acciones y los sprite de cocos2d sin el resto del entorno ?
------------------------------------------------------------------------------

Respuesta breve: **No**
Respuesta larga: **Si**

Casi todo lo que contiene cocos2d es un objeto `CocosNode` (``Sprite``, 
``Layer``, ``Scene``, etc...), así que la forma más fácil de usar los sprite
(o cualquier otro objeto `CocosNode`) es reescribir `CocosNode` en tu proyecto.

Como `CocosNode` usa el método `get_window_size` de Director, deberás crear
un stub de Director en tu proyecto que implemente `get_window_size`.
También debes llamar al método `CocosNode.visit` desde tu bucle principal para
dibujar los sprite.

Aunque no lo he intentado, creo que esto debería funcionar bien. Si no es el
caso, avísanos.


Puedo escribir una presentación (estilo PowerPoint) con cocos2d ?
-----------------------------------------------------------------

Si, puedes.

Como cocos2d tiene características como 'control del flujo de la escena' y
transiciones, puedes escribir una presentación usando cocos2d con bastante
facilidad, y hacer que se vea muy bien usando esas transiciones.

Sabías que tenemos transiciones OpenGL, como las que se pueden ver en Keynote
de Apple e Impress de OpenOffice? Es genial :-)

Por ejemplo, la charla relámpago que hicimos en PyCon 2008 se escribió con cocos2d.
El código fuente está aquí: `pycon 2008 cocos2d lighting talk`_

De todos modos, debes tener en cuenta que cocos2d no es una herramienta para
crear presentaciones. No hay planes de agregar funcionalidades para
crear presentaciones en cocos2d.

Si estás buscando una herramienta para python de presentaciones, te 
recomendamos: `Bruce the Presentation Tool`_


Me sale este error: ERROR: GPU doesn't support Frame Buffers Objects. Can't continue
------------------------------------------------------------------------------------

Significa que tu GPU no tiene soporte para la extensión ``GL_EXT_framebuffer_object``.

Los `efectos <effects>`_ de cocos2d necesitan esa extensión, y algunas 
transiciones que dependen de algunos efectos también los necesitan.

Una forma de resolverlo es activando *GenericGrabber* modificando el archivo 
``cocos/framegrabber.py``. Para hacerlo, cambia las siguientes líneas::

    raise Exception("ERROR: GPU doesn't support Frame Buffers Objects. Can't continue")
    #_best_grabber = GenericGrabber
    #return _best_grabber()

y reemplázalas por estas::

    #raise Exception("ERROR: GPU doesn't support Frame Buffers Objects. Can't continue")
    _best_grabber = GenericGrabber
    return _best_grabber()

**CUIDADO** : Esta modificación hara que veas los efectos, pero no soporta
algunas características, como los efectos en capas o en sprite. Además
tendrá un rendimiento muy inferior. Y no lo recomendamos.

Como hemos dicho antes, es una forma de resolverlo, no una solución.

Si quieres solucionarlo, puedes contribuir con `pbuffer grabber`_ .
Este código en proceso puede serte útil: `gl_pbuffer.py`_



.. _Panda3d: http://www.panda3d.org
.. _pyglet: http://www.pyglet.org
.. _Bruce the Presentation Tool: http://code.google.com/p/bruce-tpt/
.. _pycon 2008 cocos2d lighting talk: http://los-cocos.googlecode.com/svn/branches/pycon-lighting-talk/
.. _effects: http://python.cocos2d.org/doc/programming_guide/effects.html
.. _pbuffer grabber: http://oss.sgi.com/projects/ogl-sample/registry/SGIX/pbuffer.txt
.. _gl_pbuffer.py: http://los-cocos.googlecode.com/svn/branches/branch-0.2/cocos/gl_pbuffer.py 
